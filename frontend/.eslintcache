[{"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\index.js":"1","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\reportWebVitals.js":"2","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\reducer.js":"3","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\App.js":"4","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\StateProvider.js":"5","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Header.js":"6","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Login.js":"7","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Todo.js":"8","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\handleRequests.js":"9","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Loginform.js":"10"},{"size":689,"mtime":1611173502274,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":532,"mtime":1611861512269,"results":"14","hashOfConfig":"12"},{"size":1551,"mtime":1611946053813,"results":"15","hashOfConfig":"12"},{"size":368,"mtime":1611165652251,"results":"16","hashOfConfig":"12"},{"size":3459,"mtime":1611948069403,"results":"17","hashOfConfig":"12"},{"size":608,"mtime":1611741395402,"results":"18","hashOfConfig":"12"},{"size":4393,"mtime":1611948187551,"results":"19","hashOfConfig":"12"},{"size":2609,"mtime":1611928851439,"results":"20","hashOfConfig":"12"},{"size":4380,"mtime":1611839828472,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iox9cn",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\index.js",[],["45","46"],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\reportWebVitals.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\reducer.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\App.js",["47"],"import { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header.js\";\nimport Login from \"./components/Login.js\";\nimport Todo from \"./components/Todo.js\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport handleRequests from \"./handleRequests\";\nimport { actionTypes } from \"./reducer\";\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  const setUserContext = async () => {\n    await handleRequests.getUser().then((user1) => {\n      if (user1.success) {\n        localStorage.setItem(\"is\", true);\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: user1.user,\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!user) setUserContext();\n  }, [user]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">{user ? <Redirect to=\"/\" /> : <Login />}</Route>\n\n          <Route path=\"/search/:searchText\">\n            {user ? (\n              <>\n                <Header />\n                <Todo type=\"Search\" />\n              </>\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n          </Route>\n\n          <Route path=\"/\">\n            {user ? (\n              <>\n                <Header />\n                <Todo type=\"Todos\" />\n              </>\n            ) : (\n              <Redirect to=\"login\" />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\StateProvider.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Header.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Login.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Todo.js",["48","49","50"],"import React, { useState, useEffect } from \"react\";\nimport \"./Todo.css\";\nimport handleRequests from \"../handleRequests.js\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport { IconButton } from \"@material-ui/core\";\nimport { useStateValue } from \"../StateProvider.js\";\nimport { actionTypes } from \"../reducer\";\nimport { useParams } from \"react-router-dom\";\nfunction Todo({ type }) {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [{ user }, dispatch] = useStateValue();\n  const searchText = useParams();\n\n  const submitInput = (e) => {\n    e.preventDefault();\n    handleRequests\n      .post(input, user?._id)\n      .then((data1) => {\n        setTodos([...todos, data1.task]);\n      })\n      .catch((err) => console.log(err));\n\n    setInput(\"\");\n  };\n\n  const handleDeleteAll = (e) => {\n    e.preventDefault();\n    handleRequests\n      .deleteAll()\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n    setTodos([]);\n  };\n\n  const handleUpdate = (id, index, checked) => (e) => {\n    e.preventDefault();\n    let cp = [...todos];\n    if (checked === undefined) {\n      let updatedTodo = prompt(\n        \"please enter your updated todo \",\n        cp[index].task\n      );\n      if (updatedTodo) {\n        handleRequests\n          .put(id, updatedTodo)\n          .then((data1) => {\n            console.log(data1);\n          })\n          .catch((err) => console.log(err));\n        cp[index].task = updatedTodo;\n      }\n    } else {\n      handleRequests\n        .putCheck(id, checked)\n        .then((data) => {\n          console.log(data);\n        })\n        .catch((err) => console.log(err));\n      cp[index].checked = checked;\n    }\n\n    setTodos(cp);\n  };\n\n  const handleDeleteOne = (id) => (e) => {\n    e.preventDefault();\n    handleRequests\n      .deleteOne(id)\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n    setTodos(todos.filter((todo) => todo._id !== id));\n  };\n\n  const getSearchTodos = () => {\n    if (searchText) {\n      handleRequests\n        .search(searchText.searchText)\n        .then((data) => {\n          if (data.success) {\n            setTodos(data.tasks);\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  const getLoggedInUserInfo = () => {\n    handleRequests\n      .get()\n      .then((data) => {\n        setTodos(data.tasks);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    type === \"Search\" ? getSearchTodos() : getLoggedInUserInfo();\n  }, [user, searchText]);\n\n  return (\n    <div className=\"todo\">\n      <div className=\"todo__head\">\n        <h2 className=\"todo__title\"> {type}</h2>\n        <h5 className=\"todo__user\"> {user?.username}</h5>\n      </div>\n      {type === \"Search\" ? (\n        \" \"\n      ) : (\n        <div className=\"todo__fun\">\n          <form className=\"todo__input\">\n            <input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"New Todo..\"\n            />\n            <button type=\"submit\" onClick={submitInput}></button>\n          </form>\n\n          <Button type=\"submit\" color=\"secondary\" onClick={handleDeleteAll}>\n            DELETE ALL\n          </Button>\n        </div>\n      )}\n\n      {todos?.map(({ task, checked, _id }, index) => (\n        <div className=\"todo__container\" key={_id}>\n          <div className=\"todo__containerLeft\">\n            <Checkbox\n              size=\"small\"\n              color=\"primary\"\n              checked={checked}\n              onClick={handleUpdate(_id, index, !checked)}\n            />\n            <p\n              className={`todo__containerParagraph ${\n                checked ? \"todo__containerParagraphChecked\" : \"\"\n              }`}\n            >\n              {task}\n            </p>\n          </div>\n          <div className=\"todo__containerRight\">\n            <IconButton onClick={handleUpdate(_id, index)}>\n              <Edit className=\"todo__icon1\" />\n            </IconButton>\n            <IconButton onClick={handleDeleteOne(_id)}>\n              <Delete className=\"todo__icon2\" />\n            </IconButton>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Todo;\n","D:\\Clones\\MERN\\TodoApp\\frontend\\src\\handleRequests.js",[],"D:\\Clones\\MERN\\TodoApp\\frontend\\src\\components\\Loginform.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":32,"column":6,"nodeType":"57","endLine":32,"endColumn":12,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":10,"column":10,"nodeType":"61","messageId":"62","endLine":10,"endColumn":21},{"ruleId":"59","severity":1,"message":"63","line":15,"column":20,"nodeType":"61","messageId":"62","endLine":15,"endColumn":28},{"ruleId":"55","severity":1,"message":"64","line":101,"column":6,"nodeType":"57","endLine":101,"endColumn":24,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUserContext'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'actionTypes' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSearchTodos' and 'type'. Either include them or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [setUserContext, user]",{"range":"74","text":"75"},"Update the dependencies array to be: [user, searchText, type, getSearchTodos]",{"range":"76","text":"77"},[819,825],"[setUserContext, user]",[2678,2696],"[user, searchText, type, getSearchTodos]"]